sc-button {
  /**
    @prop --sc-button-bg-color:
      Background of the button.
      - default: var(--sc-bg-color, #f6f6f8)
    @prop --sc-button-text-color:
      Button text color.
      - default: var(--sc-text-color, #333333)
    @prop --sc-button-border-radius:
      Button border radius.
      - default: var(--sc-border-radius, 1em)
    @prop --sc-button-padding-y:
      Vertical paddings.
      - default: calc(var(--sc-root-spacing, 8px) * 2)
    @prop --sc-button-padding-x:
      Horizontal paddings.
      - default: calc(var(--sc-root-spacing, 8px) * 4)
    @prop --sc-button-icon-size:
      Icon button size.
      - default: calc(var(--sc-root-spacing, 8px) * 6)
    @prop --sc-button-circle-size:
      Circle button size.
      - default: calc(var(--sc-root-spacing, 8px) * 6)
    @prop --sc-button-bordered-border-radius:
      Bordered-style border radius
      - default: var(--sc-button-border-radius)
    @prop --sc-button-bordered-border-width:
      Bordered-style border width
      - default: 2px
    @prop --sc-button-text-hover-color:
      Text color on hover
      - default: var(--sc-secondary-color, #646695)
    @prop --sc-button-text-active-color:
      Text color with active prop
      - default: var(--sc-active-color, #c586c0)
    @prop --sc-button-width:
      Set fixed width for button
      - default: auto
    @prop --sc-button-edge-width:
      Width of the edge
      - default: 4px
    @prop --sc-button-vertical-align:
      vertical align of the button
      - default: top
    */

  --sc-button-bg-color: var(--sc-bg-color, #f6f6f8);
  --sc-button-text-color: var(--sc-text-color, #333333);
  --sc-button-border-radius: var(--sc-border-radius, 1em);
  --sc-button-padding-y: calc(var(--sc-root-spacing, 8px) * 2);
  --sc-button-padding-x: calc(var(--sc-root-spacing, 8px) * 4);
  --sc-button-icon-size: calc(var(--sc-root-spacing, 8px) * 6);
  --sc-button-circle-size: calc(var(--sc-root-spacing, 8px) * 6);
  --sc-button-bordered-border-radius: var(--sc-button-border-radius);
  --sc-button-bordered-border-width: 2px;
  --sc-button-text-hover-color: var(--sc-secondary-color, #646695);
  --sc-button-text-active-color: var(--sc-active-color, #c586c0);
  --sc-button-width: auto;
  --sc-button-edge-width: 4px;
  --sc-button-vertical-align: top;
  //-------------sc-button---------------//
  display: inline-block;
  vertical-align: var(--sc-button-vertical-align);
  &[type] {
    -webkit-appearance: none;
  }
  * {
    box-sizing: border-box;
  }

  &:not(.flat) {
    a,
    button {
      @include raised();
    }
  }
  a,
  button {
    cursor: pointer;
    border: none;
    text-decoration: none;
    display: block;
    background-color: var(--sc-button-bg-color);
    color: var(--sc-button-text-color);
    border-radius: var(--sc-button-border-radius);
    position: relative;
    padding: var(--sc-button-edge-width);
    font-size: 1em;
    font-family: inherit;
    width: var(--sc-button-width);

    .button-inner {
      overflow: hidden;
      transition: all 0.4s ease;
      display: block;
      padding: var(--sc-button-padding-y) var(--sc-button-padding-x);
      border-radius: calc(var(--sc-button-border-radius) - 4px);
      width: var(--sc-button-width);
    }

    &:hover,
    &:focus {
      color: var(--sc-button-text-hover-color);
      .button-inner {
        @include engraved(0.5);
      }
    }

    &:active {
      .button-inner {
        @include engraved(1);
      }
    }
  }

  &.block {
    display: block;

    a,
    button {
      width: 100%;

      .button-inner {
        width: 100%;
        text-align: center;
        justify-content: center;
      }
    }
  }

  &.icon {
    a,
    button {
      width: var(--sc-button-icon-size);
      height: var(--sc-button-icon-size);
      padding: var(--sc-button-edge-width);
      font-size: calc(var(--sc-button-icon-size) * 0.4);

      .button-inner {
        padding: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }
  &.icon-text {
    .button-inner {
      display: flex;
      align-items: center;
    }
  }
  &.bordered {
    a,
    button {
      position: relative;
      padding: calc(
        var(--sc-button-edge-width) + var(--sc-button-bordered-border-width)
      );
      &::before {
        content: '';
        position: absolute;
        top: calc(var(--sc-button-edge-width) - 1px);
        left: calc(var(--sc-button-edge-width) - 1px);
        bottom: calc(var(--sc-button-edge-width) - 1px);
        right: calc(var(--sc-button-edge-width) - 1px);
        border-radius: var(--sc-button-bordered-border-radius);
        @include engraved-border-gradient();
      }
      .button-inner {
        position: relative;
        background-color: var(--sc-button-bg-color);
        border-radius: calc(var(--sc-button-bordered-border-radius) - 1px);
      }
    }
    &.icon {
      a,
      button {
        --sc-button-bordered-border-radius: 50%;
        line-height: calc(
          var(--sc-button-icon-size) - (var(--sc-button-edge-width) * 2) -
            var(--sc-button-bordered-border-width) -
            var(--sc-button-bordered-border-width)
        );
      }
    }
  }
  &.circle {
    a,
    button {
      width: var(--sc-button-circle-size);
      height: var(--sc-button-circle-size);
      border-radius: 50%;
      padding: var(--sc-button-edge-width);
      &::before {
        border-radius: 50%;
      }
      .button-inner {
        padding: 0;
        width: 100%;
        height: 100%;
        display: flex;
        border-radius: 50%;
      }
    }

    &.bordered {
      a,
      button {
        padding: calc(
          var(--sc-button-edge-width) + var(--sc-button-bordered-border-width)
        );
      }
    }
  }
  &.active {
    a,
    button {
      color: var(--sc-button-text-active-color);
      .button-inner {
        @include engraved();
      }
    }
  }

  &.disabled {
    a,
    button {
      box-shadow: none;
      color: #999;
      &:hover,
      &:focus {
        .button-inner {
          box-shadow: none;
        }
      }
    }
  }
}
