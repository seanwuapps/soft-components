sc-toggle {
  /**
    @prop --sc-toggle-bg-color:
      Default background color in the toggle slide area
      - default: var(--sc-bg-color, #eee)
  */
  --sc-toggle-bg-color: var(--sc-bg-color, #eee);

  /**
    @prop --sc-toggle-button-size:
      Size of the toggle button. Note, if elements has `size="sm"` attribute, the size will be half of this value.
      - default: calc(var(--sc-border-radius, 1em) * 2 + 1em)
  */
  --sc-toggle-button-size: var(--sc-border-radius, 40px);

  /**
    @prop --sc-toggle-active-bg-color:
      Background color of the toggle when active/checked
      - default: var(--sc-active-color, #c586c0)
  */
  --sc-toggle-active-bg-color: var(--sc-active-color, #c586c0);

  /**
    @prop --sc-toggle-button-color:
      Toggle button color
      - default: #fff
  */
  --sc-toggle-button-color: #fff;

  /**
    @prop --sc-toggle-active-btn-color:
      Toggle button color when active/checked
      - default: #fff
  */
  --sc-toggle-active-btn-color: #fff;

  * {
    box-sizing: border-box;
  }
  .toggle {
    box-sizing: border-box;
    display: inline-block;
    padding: 2px;
    @include raised(0.3);
    border-radius: calc(var(--sc-toggle-button-size) / 2 - 4px);
    vertical-align: middle;
  }
  .toggle--slider {
    cursor: pointer;
    display: block;
    width: calc(var(--sc-toggle-button-size) * 2);
    height: var(--sc-toggle-button-size);
    background: var(--sc-toggle-bg-color);
    position: relative;
    border-radius: calc(var(--sc-toggle-button-size) / 2 - 4px);
    @include transition(all);
    @include engraved(0.2);
    &:hover {
      @include engraved(0.8);
    }
    .toggle--dots {
      display: block;
      position: relative;
      width: 100%;
      height: 100%;
      span {
        position: absolute;
        display: block;
        width: calc(var(--sc-toggle-button-size) / 8);
        height: calc(var(--sc-toggle-button-size) / 8);
        border-radius: 50%;
        @include raised(0.2);

        &:nth-child(1) {
          top: 30%;
          left: 30%;
        }
        &:nth-child(2) {
          top: 30%;
          right: 30%;
        }
        &:nth-child(3) {
          bottom: 30%;
          left: 30%;
        }
        &:nth-child(4) {
          bottom: 30%;
          right: 30%;
        }
      }
    }
    .toggle--btn {
      @include raised(1);
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: var(--sc-toggle-button-size);
      border-radius: calc(var(--sc-toggle-button-size) / 2 - 4px);
      background-color: var(--sc-toggle-button-color);
      transition: left 0.3s ease;
    }
  }
  input[type='checkbox'] {
    position: absolute;
    width: var(--sc-toggle-button-size);
    opacity: 0;
    &:focus {
      & + .toggle--slider {
        // @include browserFocus();
        @include engraved(0.8);
      }
    }
    &:checked {
      & + .toggle--slider {
        background: var(--sc-toggle-active-bg-color);
        .toggle--btn {
          left: var(--sc-toggle-button-size);
          background: var(--sc-toggle-active-btn-color);
          // .toggle--dots {
          //   span {
          //   }
          // }
        }
      }
    }
  }
  .toggle--label {
    margin-left: 10px;
  }

  // small toggles
  &.sm {
    .toggle {
      @include raised(0);
      padding: 0;
      .toggle--slider {
        width: calc(var(--sc-toggle-button-size));
        height: calc(var(--sc-toggle-button-size) / 2);
        .toggle--btn {
          @include raised(0.2);
          margin: 2px;
          width: calc((var(--sc-toggle-button-size) / 2) - 4px);
          height: calc((var(--sc-toggle-button-size) / 2) - 4px);
          border-radius: 50%;
          .toggle--dots {
            display: none;
          }
        }
      }
      input[type='checkbox'] {
        &:checked {
          & + .toggle--slider {
            .toggle--btn {
              left: calc(var(--sc-toggle-button-size) / 2);
            }
          }
        }
      }
    }
  }
}
